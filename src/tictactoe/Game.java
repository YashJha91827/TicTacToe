/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tictactoe;
import javax.swing.*;
/**
 *
 * @author DELL
 */
public class Game extends javax.swing.JFrame {
    private int player=1;
    private Board board; //Board class variable
     
    //Creating button class reference. Type is 2-D Array 
    private JButton [][] button = new JButton[3][3];  
    protected void setButtonReferences() //Method is used for set Button Reference.
    {     
     //Sare Button ke jo references the wo hamne apne array me
     //transfer kar liye h.
    button[0][0]=jButton1; //Jo reference jButton1 me tha wo hi button [0][0] me aa gaya h.
    button[0][1]=jButton1;
    button[0][2]=jButton1;
    button[1][0]=jButton1;
    button[1][1]=jButton1;
    button[1][2]=jButton1;
    button[2][0]=jButton1;
    button[2][1]=jButton1;
    button[2][2]=jButton1;
    }
    /**
     * Creates new form Game
     */
    public Game() {
        initComponents();
        
    }
    
    public void setPlayer(int value) //For initializing player value
    {
     player=value;
    }
    
    public void refreshBoardDisplay()
    {
     for(int i=0;i<=2;i++)
         for(int j=0;j<=2;j++)
         {
          switch(board.getBoardValue(i,j))
          {
              case 2:
                  button[i][j].setEnabled(true);
                  button[i][j].setText("");
                  break;
                  
              case 3:
                  button[i][j].setEnabled(false);
                  button[i][j].setText("X");
                  break;
                  
              case 5:
                  button[i][j].setEnabled(false);
                  button[i][j].setText("0");
                  break;
          }
         }  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tic Tac Toe");
        setPreferredSize(new java.awt.Dimension(340, 380));
        setResizable(false);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 104, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(326, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(player==1)
        {
         board.setBoardValue(0, 0, 3);
         this.refreshBoardDisplay();
         if(board.checkWin(1))
         {
          JOptionPane.showMessageDialog(this,"Congrats!!, You win");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else if(board.isBoardFilled())
         {
          JOptionPane.showMessageDialog(this,"Game Draw");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else
         {
          setPlayer(3-player);
          playComputer();
         }
        }
        else //Player==2
        {
         board.setBoardValue(0, 0, 5);
         this.refreshBoardDisplay();
         if(board.checkWin(2))
         {
          JOptionPane.showMessageDialog(this,"Congrats!!, You win");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else if(board.isBoardFilled())
         {
          JOptionPane.showMessageDialog(this,"Game Draw");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else
         {
          setPlayer(3-player);
         }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       if(player==1)
        {
         board.setBoardValue(0, 1, 3);
         this.refreshBoardDisplay();
         if(board.checkWin(1))
         {
          JOptionPane.showMessageDialog(this,"Congrats!!, You win");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else if(board.isBoardFilled())
         {
          JOptionPane.showMessageDialog(this,"Game Draw");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else
         {
          setPlayer(3-player);
          playComputer();
         }
        }
        else //Player==2
        {
         board.setBoardValue(0, 1, 5);
         this.refreshBoardDisplay();
         if(board.checkWin(2))
         {
          JOptionPane.showMessageDialog(this,"Congrats!!, You win");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else if(board.isBoardFilled())
         {
          JOptionPane.showMessageDialog(this,"Game Draw");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else
         {
          setPlayer(3-player);
         }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(player==1)
        {
         board.setBoardValue(0, 2, 3);
         this.refreshBoardDisplay();
         if(board.checkWin(1))
         {
          JOptionPane.showMessageDialog(this,"Congrats!!, You win");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else if(board.isBoardFilled())
         {
          JOptionPane.showMessageDialog(this,"Game Draw");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else
         {
          setPlayer(3-player);
          playComputer();
         }
        }
        else //Player==2
        {
         board.setBoardValue(0, 2, 5);
         this.refreshBoardDisplay();
         if(board.checkWin(2))
         {
          JOptionPane.showMessageDialog(this,"Congrats!!, You win");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else if(board.isBoardFilled())
         {
          JOptionPane.showMessageDialog(this,"Game Draw");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else
         {
          setPlayer(3-player);
         }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(player==1)
        {
         board.setBoardValue(1, 0, 3);
         this.refreshBoardDisplay();
         if(board.checkWin(1))
         {
          JOptionPane.showMessageDialog(this,"Congrats!!, You win");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else if(board.isBoardFilled())
         {
          JOptionPane.showMessageDialog(this,"Game Draw");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else
         {
          setPlayer(3-player);
          playComputer();
         }
        }
        else //Player==2
        {
         board.setBoardValue(1, 0, 5);
         this.refreshBoardDisplay();
         if(board.checkWin(2))
         {
          JOptionPane.showMessageDialog(this,"Congrats!!, You win");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else if(board.isBoardFilled())
         {
          JOptionPane.showMessageDialog(this,"Game Draw");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else
         {
          setPlayer(3-player);
         }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if(player==1)
        {
         board.setBoardValue(1, 1, 3);
         this.refreshBoardDisplay();
         if(board.checkWin(1))
         {
          JOptionPane.showMessageDialog(this,"Congrats!!, You win");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else if(board.isBoardFilled())
         {
          JOptionPane.showMessageDialog(this,"Game Draw");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else
         {
          setPlayer(3-player);
          playComputer();
         }
        }
        else //Player==2
        {
         board.setBoardValue(1, 1, 5);
         this.refreshBoardDisplay();
         if(board.checkWin(2))
         {
          JOptionPane.showMessageDialog(this,"Congrats!!, You win");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else if(board.isBoardFilled())
         {
          JOptionPane.showMessageDialog(this,"Game Draw");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else
         {
          setPlayer(3-player);
         }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if(player==1)
        {
         board.setBoardValue(1, 2, 3);
         this.refreshBoardDisplay();
         if(board.checkWin(1))
         {
          JOptionPane.showMessageDialog(this,"Congrats!!, You win");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else if(board.isBoardFilled())
         {
          JOptionPane.showMessageDialog(this,"Game Draw");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else
         {
          setPlayer(3-player);
          playComputer();
         }
        }
        else //Player==2
        {
         board.setBoardValue(1, 2, 5);
         this.refreshBoardDisplay();
         if(board.checkWin(2))
         {
          JOptionPane.showMessageDialog(this,"Congrats!!, You win");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else if(board.isBoardFilled())
         {
          JOptionPane.showMessageDialog(this,"Game Draw");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else
         {
          setPlayer(3-player);
         }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
      if(player==1)
        {
         board.setBoardValue(2, 0, 3);
         this.refreshBoardDisplay();
         if(board.checkWin(1))
         {
          JOptionPane.showMessageDialog(this,"Congrats!!, You win");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else if(board.isBoardFilled())
         {
          JOptionPane.showMessageDialog(this,"Game Draw");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else
         {
          setPlayer(3-player);
          playComputer();
         }
        }
        else //Player==2
        {
         board.setBoardValue(2, 1, 5);
         this.refreshBoardDisplay();
         if(board.checkWin(2))
         {
          JOptionPane.showMessageDialog(this,"Congrats!!, You win");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else if(board.isBoardFilled())
         {
          JOptionPane.showMessageDialog(this,"Game Draw");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else
         {
          setPlayer(3-player);
         }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if(player==1)
        {
         board.setBoardValue(2, 1, 3);
         this.refreshBoardDisplay();
         if(board.checkWin(1))
         {
          JOptionPane.showMessageDialog(this,"Congrats!!, You win");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else if(board.isBoardFilled())
         {
          JOptionPane.showMessageDialog(this,"Game Draw");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else
         {
          setPlayer(3-player);
          playComputer();
         }
        }
        else //Player==2
        {
         board.setBoardValue(2, 1, 5);
         this.refreshBoardDisplay();
         if(board.checkWin(2))
         {
          JOptionPane.showMessageDialog(this,"Congrats!!, You win");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else if(board.isBoardFilled())
         {
          JOptionPane.showMessageDialog(this,"Game Draw");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else
         {
          setPlayer(3-player);
         }
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
     if(player==1)
        {
         board.setBoardValue(2, 2, 3);
         this.refreshBoardDisplay();
         if(board.checkWin(1))
         {
          JOptionPane.showMessageDialog(this,"Congrats!!, You win");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else if(board.isBoardFilled())
         {
          JOptionPane.showMessageDialog(this,"Game Draw");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else
         {
          setPlayer(3-player);
          playComputer();
         }
        }
        else //Player==2
        {
         board.setBoardValue(2, 2, 5);
         this.refreshBoardDisplay();
         if(board.checkWin(2))
         {
          JOptionPane.showMessageDialog(this,"Congrats!!, You win");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else if(board.isBoardFilled())
         {
          JOptionPane.showMessageDialog(this,"Game Draw");
          board.initializeBoard();
          refreshBoardDisplay();
          setPlayer(1);
         }
         else
         {
          setPlayer(3-player);
         }
        }
    }//GEN-LAST:event_jButton9ActionPerformed
      
    public void playComputer()
    { 
     int buttonNumber;   
     //1. buttonNumber = possibleWin(player) Computer check krega ke wo khud jeet rha h ke nhi. 
     //possibleWin() return kr deta h button number. To hm possibleWin() ko call krenge.
     //Wo hme btaega ke win ho rhi h ke nhi.   
     // if(buttonNumber!=0) play move. //Agar win ho rhi hogi to button 0 nhi hoga kuch aur hoga.
     //Agar buttonNumber!=0 h to 1 se 9 tak kuch hoga.
     //Ab agar button number 1 h to iska matlab wo 1 pe chalne se jeet rha h. To wo 1 pe movechal dega.
      buttonNumber = board.possibleWin(player);
      
     //2. buttonNumber = possibleWin(3-player) //Agar aisa nhi hua wo win nhi ho rhi h uski.
     //To phir wo samne wale ki win dekhega. Wo dekhega possibleWin() ko call karke. 
     //Lekin usme pass krega (3-player) Iska matlab opponent ki win dekhega.
     //Aur win ho rhi hogi to uska buttonNumber milega.
     //buttonNumber nam ka hm ek variable bna lenge aur usme value aa jaegi.   
     // if(buttonNumber!=0) play move //Iska matalb samne wale ki win khi pr ho rhi thi
     //Wo buttonNumber apko mila h to wha pr aap move play kr dijiye.
     if(buttonNumber==0)
             buttonNumber = board.possibleWin(3-player); //To opponent ki win yha pr check ho rhi h ke opponemt jeet rha h.
         //Ab agar opponent jeet rha h to uska buttonNumber yha set ho jaega.
         //Pr ho skta h opponent bhi na jeet rha ho to phir se buttonNumber 0 ho jaega.
         
        
     //Aur agar ye dono condition fail ho jati h to   
     //To na to computer jeet rha h na to opponent jeet rha h.
     //To computer phir randomly kahi pr bhi play karega.   
     //3. buttonNumber = randomBlankButton()
     // play move   //Jitni bhi blankbutton hogi jitni jagha baki h unme se koi bhi button pe wo chal dega.
     //To randomly blank button select ho jaegi. Ab 4 blank button bachi h to usme se koi bhi select hoke aa skti h. 
     if(buttonNumber==0)
         buttonNumber = board.randomBlankButton();   //Agar buttonNumber ki value 0 h. To buttonnumber ki value random number aa jaye.
     
     System.out.println("Button Number- "+buttonNumber);
     if(buttonNumber!=0)
     {
      switch(buttonNumber)
      {
          case 1:
              if(player==1)
              board.setBoardValue(0,0,3);
              else
                  board.setBoardValue(0,0,5);
              this.refreshBoardDisplay();
              break;
          case 2:
              if(player==1)
              board.setBoardValue(0,1,3);
              else
                  board.setBoardValue(0,0,5);
              this.refreshBoardDisplay();
              break;
          case 3:
              if(player==1)
              board.setBoardValue(0,2,3);
              else
                  board.setBoardValue(0,0,5);
              this.refreshBoardDisplay();
              break;
          case 4:
              if(player==1)
              board.setBoardValue(1,0,3);
              else
                  board.setBoardValue(0,0,5);
              this.refreshBoardDisplay();
              break;
          case 5:
              if(player==1)
              board.setBoardValue(1,1,3);
              else
                  board.setBoardValue(0,0,5);
              this.refreshBoardDisplay();
              break;
          case 6:
              if(player==1)
              board.setBoardValue(1,2,3);
              else
                  board.setBoardValue(0,0,5);
              this.refreshBoardDisplay();
              break;
          case 7:
              if(player==1)
              board.setBoardValue(2,0,3);
              else
                  board.setBoardValue(0,0,5);
              this.refreshBoardDisplay();
              break;
          case 8:
              if(player==1)
              board.setBoardValue(2,1,3);
              else
                  board.setBoardValue(0,0,5);
              this.refreshBoardDisplay();
              break;
          case 9:
              if(player==1)
              board.setBoardValue(2,2,3);
              else
                  board.setBoardValue(0,0,5);
              this.refreshBoardDisplay();
              break;
      }
      if(board.checkWin(player))
      {
       JOptionPane.showMessageDialog(this,"Computer won the game");
       board.initializeBoard();
       this.refreshBoardDisplay();
       setPlayer(1);
      }
      else if(board.isBoardFilled())
      {
       JOptionPane.showMessageDialog(this,"Game Drawn");
       board.initializeBoard();
       this.refreshBoardDisplay();
       setPlayer(1);
      }
       else
      {
       setPlayer(3-player);
      }
      }
     
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Game game = new Game(); //We created object of Game class
                game.setButtonReferences(); //We called this method from onstructor
                game.setVisible(true);
                game.board = new Board();
                game.board.initializeBoard();
                game.setPlayer(1);
                game.refreshBoardDisplay();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    // End of variables declaration//GEN-END:variables
}
